<?xml version="1.0" encoding="UTF-8"?>
	<!--Created by TIBCO WSDL-->
<wsdl:definitions xmlns:ns="http://windyroad.org/bwunit-0.0.0.xsd"
	xmlns:ns1="http://windyroad.org/bwunit-errors-0.0.0.xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
	xmlns:tns="http://windyroad.org/bwunit-concrete" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
	name="BWUnit" targetNamespace="http://windyroad.org/bwunit-concrete">
	<wsdl:documentation>Version 1.1</wsdl:documentation>
	<wsdl:types>
		<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
			xmlns:bwu="http://windyroad.org/bwunit-0.0.0.xsd" targetNamespace="http://windyroad.org/bwunit-0.0.0.xsd"
			elementFormDefault="qualified" attributeFormDefault="unqualified">
			<xs:simpleType name="path">
				<xs:restriction base="xs:anyURI" />
			</xs:simpleType>
			<xs:complexType name="test-type">
				<xs:attribute name="name" type="xs:string" />
				<xs:attribute name="path" type="xs:string" />
			</xs:complexType>
			<xs:element name="test" type="bwu:test-type" />
			<xs:element name="test-failure">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="error-report">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="StackTrace" type="xs:string" />
									<xs:element name="Msg" type="xs:string" />
									<xs:element name="FullClass" type="xs:string" />
									<xs:element name="Class" type="xs:string" />
									<xs:element name="ProcessStack">
										<xs:complexType>
											<xs:sequence>
												<xs:element name="ProcessName" type="xs:string"
													minOccurs="0" maxOccurs="unbounded" />
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="MsgCode" type="xs:string"
										minOccurs="0" />
									<xs:element name="Data" type="bwu:anydata"
										minOccurs="0" />
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="fixture">
				<xs:complexType>
					<xs:attribute name="name" type="xs:string" />
					<xs:attribute name="path" type="xs:string" />
				</xs:complexType>
			</xs:element>
			<xs:element name="test-case" type="bwu:test-case-type" />
			<xs:element name="test-suite" type="bwu:test-suite-type" />
			<xs:complexType name="anydata">
				<xs:sequence>
					<xs:any namespace="##any" processContents="lax" minOccurs="0" />
				</xs:sequence>
			</xs:complexType>
			<xs:element name="test-success">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="duration">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="test" type="xs:unsignedLong" />
									<xs:element name="fixture" type="xs:unsignedLong"
										minOccurs="0" />
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="test-suite-collection">
				<xs:sequence>
					<xs:element ref="bwu:test-suite" minOccurs="0"
						maxOccurs="unbounded" />
				</xs:sequence>
			</xs:complexType>
			<xs:element name="test-suites" type="bwu:test-suite-collection" />
			<xs:element name="test-with-fixture">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="bwu:test-type">
							<xs:sequence>
								<xs:element ref="bwu:fixture" minOccurs="0" />
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="test-result">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="bwu:test-type">
							<xs:choice>
								<xs:element ref="bwu:test-success" />
								<xs:element ref="bwu:test-failure" />
							</xs:choice>
							<xs:attribute name="datetime" type="xs:dateTime" />
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="test-case-result">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="bwu:test-type">
							<xs:sequence>
								<xs:element ref="bwu:test-result" minOccurs="0"
									maxOccurs="unbounded" />
							</xs:sequence>
							<xs:attribute name="datetime" type="xs:dateTime" />
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="test-suite-result">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="bwu:test-type">
							<xs:sequence>
								<xs:element ref="bwu:test-suite-result" minOccurs="0"
									maxOccurs="unbounded" />
								<xs:element ref="bwu:test-case-result" minOccurs="0"
									maxOccurs="unbounded" />
							</xs:sequence>
							<xs:attribute name="datetime" type="xs:dateTime" />
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="test-suites-results">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="bwu:test-suite-result" minOccurs="0"
							maxOccurs="unbounded" />
					</xs:sequence>
					<xs:attribute name="datetime" type="xs:dateTime" />
				</xs:complexType>
			</xs:element>
			<xs:element name="settings">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="scope" type="xs:string" minOccurs="0" />
						<xs:element name="suite-pattern" type="xs:string"
							minOccurs="0" />
						<xs:element name="case-pattern" type="xs:string"
							minOccurs="0" />
						<xs:element name="fixture-pattern" type="xs:string"
							minOccurs="0" />
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="test-case-type">
				<xs:complexContent>
					<xs:extension base="bwu:test-type">
						<xs:sequence>
							<xs:element ref="bwu:test" minOccurs="0" maxOccurs="unbounded" />
							<xs:element ref="bwu:fixture" minOccurs="0" />
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="test-suite-type">
				<xs:complexContent>
					<xs:extension base="bwu:test-type">
						<xs:sequence>
							<xs:element ref="bwu:test-suite" minOccurs="0"
								maxOccurs="unbounded" />
							<xs:element ref="bwu:test-case" minOccurs="0"
								maxOccurs="unbounded" />
							<xs:element ref="bwu:fixture" minOccurs="0" />
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="test-id" type="xs:string" />
			<xs:element name="license-content">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="holder" type="xs:string" />
						<xs:element name="issued" type="xs:dateTime" />
						<xs:element name="issuer" type="xs:string" />
						<xs:element name="not-after" type="xs:dateTime" />
						<xs:element name="not-before" type="xs:dateTime" />
						<xs:element name="subject" type="xs:string" />
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="empty">
				<xs:complexType />
			</xs:element>
			<xs:element name="license-key" type="xs:base64Binary" />
		</xs:schema>
		<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
			xmlns:bwue="http://windyroad.org/bwunit-errors-0.0.0.xsd" xmlns:bwu="http://windyroad.org/bwunit-0.0.0.xsd"
			targetNamespace="http://windyroad.org/bwunit-errors-0.0.0.xsd"
			elementFormDefault="qualified" attributeFormDefault="unqualified">
			<xs:complexType name="error-type" />
			<xs:complexType name="assertion-error-type">
				<xs:complexContent>
					<xs:extension base="bwue:error-type">
						<xs:sequence>
							<xs:element name="assertion" type="xs:string" />
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="assertion-error">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="bwue:assertion-error-type" />
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="assert-equal-error">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="bwue:assertion-error-type">
							<xs:sequence>
								<xs:element name="expected">
									<xs:complexType>
										<xs:sequence>
											<xs:any namespace="##any" processContents="lax" />
										</xs:sequence>
									</xs:complexType>
								</xs:element>
								<xs:element name="actual">
									<xs:complexType>
										<xs:sequence>
											<xs:any namespace="##any" processContents="lax" />
										</xs:sequence>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="assert-equal-double-error">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="bwue:assertion-error-type">
							<xs:sequence>
								<xs:element name="expected" type="xs:double" />
								<xs:element name="actual" type="xs:double" />
								<xs:element name="delta" type="xs:double" />
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="assert-match-error">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="bwue:assertion-error-type">
							<xs:sequence>
								<xs:element name="string" type="xs:string" />
								<xs:element name="pattern" type="xs:string" />
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="assert-subset-error">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="bwue:assertion-error-type">
							<xs:sequence>
								<xs:element name="superset">
									<xs:complexType>
										<xs:sequence>
											<xs:any namespace="##any" processContents="lax"
												minOccurs="0" maxOccurs="unbounded" />
										</xs:sequence>
									</xs:complexType>
								</xs:element>
								<xs:element name="subset">
									<xs:complexType>
										<xs:sequence>
											<xs:any namespace="##any" processContents="lax"
												minOccurs="0" maxOccurs="unbounded" />
										</xs:sequence>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="assert-exists-error">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="bwue:assertion-error-type">
							<xs:sequence>
								<xs:element name="content">
									<xs:complexType>
										<xs:sequence>
											<xs:any namespace="##any" processContents="lax"
												minOccurs="0" maxOccurs="unbounded" />
										</xs:sequence>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="assert-not-equal-error">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="bwue:assertion-error-type">
							<xs:sequence>
								<xs:element name="expected-and-actual">
									<xs:complexType>
										<xs:sequence>
											<xs:any namespace="##any" processContents="lax" />
										</xs:sequence>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="timeout-error">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="bwue:error-type">
							<xs:sequence>
								<xs:element name="timeout" type="xs:long" />
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="test-not-found-error">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="bwue:error-type">
							<xs:sequence>
								<xs:element ref="bwu:test-id" />
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="license-error">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="bwue:error-type">
							<xs:sequence>
								<xs:element name="message" type="xs:string" />
								<xs:element name="code" type="xs:string" />
								<xs:choice>
									<xs:element name="no-license-installed-error">
										<xs:complexType />
									</xs:element>
									<xs:element name="license-notary-error">
										<xs:complexType />
									</xs:element>
									<xs:element name="io-error">
										<xs:complexType />
									</xs:element>
									<xs:element name="license-content-error" type="xs:string" />
									<xs:element name="illegal-block-size-error" type="xs:string" />
									<xs:element name="certificate-integrity-error" type="xs:string" />
									<xs:element name="certificate-locked-error">
										<xs:complexType />
									</xs:element>
									<xs:element name="certificate-unlocked-error">
										<xs:complexType />
									</xs:element>
									<xs:element name="persistence-service-error">
										<xs:complexType />
									</xs:element>
									<xs:element name="unknown">
										<xs:complexType />
									</xs:element>
								</xs:choice>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:schema>
	</wsdl:types>
	<wsdl:service name="BWUnit">
		<wsdl:port binding="tns:BWUnitBinding" name="BWUnit">
			<soap:address location="http://localhost:5454/BWUnit" />
		</wsdl:port>
	</wsdl:service>
	<wsdl:portType name="BWUnit">
		<wsdl:operation name="runTestCase">
			<wsdl:input message="tns:test-id-msg" />
			<wsdl:output message="tns:test-case-result-msg" />
			<wsdl:fault message="tns:license-error-msg" name="license-fault" />
			<wsdl:fault message="tns:test-not-found-msg" name="fault" />
		</wsdl:operation>
		<wsdl:operation name="runTest">
			<wsdl:input message="tns:test-id-msg" />
			<wsdl:output message="tns:test-result-msg" />
			<wsdl:fault message="tns:license-error-msg" name="license-fault" />
			<wsdl:fault message="tns:test-not-found-msg" name="fault" />
		</wsdl:operation>
		<wsdl:operation name="runAllTestSuites">
			<wsdl:input message="tns:settings-msg" />
			<wsdl:output message="tns:test-suites-results-msg" />
			<wsdl:fault message="tns:license-error-msg" name="license-fault" />
		</wsdl:operation>
		<wsdl:operation name="verifyLicense">
			<wsdl:input message="tns:null-msg" />
			<wsdl:output message="tns:license-content-msg" />
			<wsdl:fault message="tns:license-error-msg" name="fault" />
		</wsdl:operation>
		<wsdl:operation name="getTestSuites">
			<wsdl:input message="tns:settings-msg" />
			<wsdl:output message="tns:test-suites-msg" />
			<wsdl:fault message="tns:license-error-msg" name="license-fault" />
		</wsdl:operation>
		<wsdl:operation name="runTestSuite">
			<wsdl:input message="tns:test-id-msg" />
			<wsdl:output message="tns:test-suite-result-msg" />
			<wsdl:fault message="tns:license-error-msg" name="license-fault" />
			<wsdl:fault message="tns:test-not-found-msg" name="fault" />
		</wsdl:operation>
		<wsdl:operation name="stopEngine">
			<wsdl:input message="tns:null-msg" />
			<wsdl:output message="tns:null-msg" />
		</wsdl:operation>
		<wsdl:operation name="installLicense">
			<wsdl:input message="tns:license-key-msg" />
			<wsdl:output message="tns:license-content-msg" />
			<wsdl:fault message="tns:license-error-msg" name="fault" />
		</wsdl:operation>
		<wsdl:operation name="uninstallLicense">
			<wsdl:input message="tns:null-msg" />
			<wsdl:output message="tns:null-msg" />
		</wsdl:operation>
	</wsdl:portType>
	<wsdl:binding name="BWUnitBinding" type="tns:BWUnit">
		<soap:binding style="document"
			transport="http://schemas.xmlsoap.org/soap/http" />
		<wsdl:operation name="runTestCase">
			<soap:operation soapAction="/BWUnit/runTestCase"
				style="document" />
			<wsdl:input>
				<soap:body parts="test settings" use="literal" />
			</wsdl:input>
			<wsdl:output>
				<soap:body parts="test-case-result" use="literal" />
			</wsdl:output>
			<wsdl:fault name="license-fault">
				<soap:fault name="license-fault" use="literal" />
			</wsdl:fault>
			<wsdl:fault name="fault">
				<soap:fault name="fault" use="literal" />
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="runTest">
			<soap:operation soapAction="/BWUnit/runTest" style="document" />
			<wsdl:input>
				<soap:body parts="test settings" use="literal" />
			</wsdl:input>
			<wsdl:output>
				<soap:body parts="test-result" use="literal" />
			</wsdl:output>
			<wsdl:fault name="license-fault">
				<soap:fault name="license-fault" use="literal" />
			</wsdl:fault>
			<wsdl:fault name="fault">
				<soap:fault name="fault" use="literal" />
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="runAllTestSuites">
			<soap:operation soapAction="/BWUnit/runAllTestSuites"
				style="document" />
			<wsdl:input>
				<soap:body parts="settings" use="literal" />
			</wsdl:input>
			<wsdl:output>
				<soap:body parts="test-suites-results" use="literal" />
			</wsdl:output>
			<wsdl:fault name="license-fault">
				<soap:fault name="license-fault" use="literal" />
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="verifyLicense">
			<soap:operation soapAction="/BWUnit/verifyLicense"
				style="document" />
			<wsdl:input>
				<soap:body parts="null" use="literal" />
			</wsdl:input>
			<wsdl:output>
				<soap:body parts="license-content" use="literal" />
			</wsdl:output>
			<wsdl:fault name="fault">
				<soap:fault name="fault" use="literal" />
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="getTestSuites">
			<soap:operation soapAction="/BWUnit/getTestSuites"
				style="document" />
			<wsdl:input>
				<soap:body parts="settings" use="literal" />
			</wsdl:input>
			<wsdl:output>
				<soap:body parts="test-suites" use="literal" />
			</wsdl:output>
			<wsdl:fault name="license-fault">
				<soap:fault name="license-fault" use="literal" />
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="runTestSuite">
			<soap:operation soapAction="/BWUnit/runTestSuite"
				style="document" />
			<wsdl:input>
				<soap:body parts="test settings" use="literal" />
			</wsdl:input>
			<wsdl:output>
				<soap:body parts="test-suite-result" use="literal" />
			</wsdl:output>
			<wsdl:fault name="license-fault">
				<soap:fault name="license-fault" use="literal" />
			</wsdl:fault>
			<wsdl:fault name="fault">
				<soap:fault name="fault" use="literal" />
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="stopEngine">
			<soap:operation soapAction="/BWUnit/stopEngine" style="document" />
			<wsdl:input>
				<soap:body parts="null" use="literal" />
			</wsdl:input>
			<wsdl:output>
				<soap:body parts="null" use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="installLicense">
			<soap:operation soapAction="/BWUnit/installLicense"
				style="document" />
			<wsdl:input>
				<soap:body parts="license-key" use="literal" />
			</wsdl:input>
			<wsdl:output>
				<soap:body parts="license-content" use="literal" />
			</wsdl:output>
			<wsdl:fault name="fault">
				<soap:fault name="fault" use="literal" />
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="uninstallLicense">
			<soap:operation soapAction="/BWUnit/uninstallLicense"
				style="document" />
			<wsdl:input>
				<soap:body parts="null" use="literal" />
			</wsdl:input>
			<wsdl:output>
				<soap:body parts="null" use="literal" />
			</wsdl:output>
		</wsdl:operation>
	</wsdl:binding>
	<wsdl:message name="test-id-msg">
		<wsdl:part element="ns:test-id" name="test" />
		<wsdl:part element="ns:settings" name="settings" />
	</wsdl:message>
	<wsdl:message name="test-case-result-msg">
		<wsdl:part element="ns:test-case-result" name="test-case-result" />
	</wsdl:message>
	<wsdl:message name="license-error-msg">
		<wsdl:part element="ns1:license-error" name="license-error" />
	</wsdl:message>
	<wsdl:message name="test-not-found-msg">
		<wsdl:part element="ns1:test-not-found-error" name="test-not-found" />
	</wsdl:message>
	<wsdl:message name="test-result-msg">
		<wsdl:part element="ns:test-result" name="test-result" />
	</wsdl:message>
	<wsdl:message name="settings-msg">
		<wsdl:part element="ns:settings" name="settings" />
	</wsdl:message>
	<wsdl:message name="test-suites-results-msg">
		<wsdl:part element="ns:test-suites-results" name="test-suites-results" />
	</wsdl:message>
	<wsdl:message name="null-msg">
		<wsdl:documentation>BW 5.5.3 doesn't play nice with operations that
			take no input
			GI 3.5.1 doesn't play nice with operations that take no
			input or give
			no output
		</wsdl:documentation>
		<wsdl:part element="ns:empty" name="null" />
	</wsdl:message>
	<wsdl:message name="license-content-msg">
		<wsdl:part element="ns:license-content" name="license-content" />
	</wsdl:message>
	<wsdl:message name="test-suites-msg">
		<wsdl:part element="ns:test-suites" name="test-suites" />
	</wsdl:message>
	<wsdl:message name="test-suite-result-msg">
		<wsdl:part element="ns:test-suite-result" name="test-suite-result" />
	</wsdl:message>
	<wsdl:message name="license-key-msg">
		<wsdl:part element="ns:license-key" name="license-key" />
	</wsdl:message>
</wsdl:definitions>